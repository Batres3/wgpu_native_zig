.{
    .name = "wgpu-native-zig",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        // See `zig fetch --save <url>` for a command-line interface for adding dependencies.
        //.example = .{
        //    // When updating this field to a new URL, be sure to delete the corresponding
        //    // `hash`, otherwise you are communicating that you expect to find the old hash at
        //    // the new URL.
        //    .url = "https://example.com/foo.tar.gz",
        //
        //    // This is computed from the file contents of the directory of files that is
        //    // obtained after fetching `url` and applying the inclusion rules given by
        //    // `paths`.
        //    //
        //    // This field is the source of truth; packages do not come from a `url`; they
        //    // come from a `hash`. `url` is just one of many possible mirrors for how to
        //    // obtain a package matching this `hash`.
        //    //
        //    // Uses the [multihash](https://multiformats.io/multihash/) format.
        //    .hash = "...",
        //
        //    // When this is provided, the package is found in a directory relative to the
        //    // build root. In this case the package's hash is irrelevant and therefore not
        //    // computed. This field and `url` are mutually exclusive.
        //    .path = "foo",

        //    // When this is set to `true`, a package is declared to be lazily
        //    // fetched. This makes the dependency only get fetched if it is
        //    // actually used.
        //    .lazy = false,
        //},
        .wgpu_linux_aarch64_Debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-linux-aarch64-debug.zip",
            .hash = "1220c5c60367d517cf903af0d7069341c47bc9480745ab1b2eb79215f824e3ae5415",
            .lazy = true,
        },
        .wgpu_linux_aarch64_Release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-linux-aarch64-release.zip",
            .hash = "1220a5b5a646335dd7eb574c1651b834bdacb0f0d9ded73d20d98ec51c0799fd6e39",
            .lazy = true,
        },
        .wgpu_linux_x86_64_Debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-linux-x86_64-debug.zip",
            .hash = "12207e9485f4e55fd7861d03ab0f5ad519d8d677683b015c49403c787c5d2e860462",
            .lazy = true,
        },
        .wgpu_linux_x86_64_Release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-linux-x86_64-release.zip",
            .hash = "12203b428e491c4c4bc118546a82677a2fd22a54e4c4d946a5550af0bb9516981acd",
            .lazy = true,
        },
        .wgpu_macos_aarch64_Debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-macos-aarch64-debug.zip",
            .hash = "12208be7ee935c715c51c3e5c5f6ca8a5c321b9d48c7023acc8ee080ffc684156b07",
            .lazy = true,
        },
        .wgpu_macos_aarch64_Release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-macos-aarch64-release.zip",
            .hash = "1220023318449ce4d30df22ee74b86e6a8dbb14f7f94adda1d67fbfafd73b47f1537",
            .lazy = true,
        },
        .wgpu_macos_x86_64_Debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-macos-x86_64-debug.zip",
            .hash = "12200bbcc01f1da81be8ad46576cc9050f0ae0a373dc3c25a49209da388146044319",
            .lazy = true,
        },
        .wgpu_macos_x86_64_Release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-macos-x86_64-release.zip",
            .hash = "122031ddd3bf08247a0c99fc7184c864b90c222ca3727f312638d088697cd4b209c9",
            .lazy = true,
        },
        .wgpu_windows_x86_Debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-windows-i686-debug.zip",
            .hash = "1220236e1f3582750dc29df88453e5ced071cef6c7b99bb9c4fa8c0768b598810327",
            .lazy = true,
        },
        .wgpu_windows_x86_Release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-windows-i686-release.zip",
            .hash = "1220300a415e6da6e4166b7d2967766200dbb27611e90b7b0f0581186d1cf46228f8",
            .lazy = true,
        },
        .wgpu_windows_x86_64_Debug = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-windows-x86_64-debug.zip",
            .hash = "12208d230d1caf2c05af6d98e468cd392bedafacbe7d54650a80544387da5b71b86d",
            .lazy = true,
        },
        .wgpu_windows_x86_64_Release = .{
            .url = "https://github.com/gfx-rs/wgpu-native/releases/download/v0.19.4.1/wgpu-windows-x86_64-release.zip",
            .hash = "1220ad091260ce55550369c93489f75a44079d196f15b0de62140487380074d3923c",
            .lazy = true,
        },
    },

    // Specifies the set of files and directories that are included in this package.
    // Only files and directories listed here are included in the `hash` that
    // is computed for this package. Only files listed here will remain on disk
    // when using the zig package manager. As a rule of thumb, one should list
    // files required for compilation plus any license(s).
    // Paths are relative to the build root. Use the empty string (`""`) to refer to
    // the build root itself.
    // A directory listed here means that all files within, recursively, are included.
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
